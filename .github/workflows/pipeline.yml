name: Basic Pipeline

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: ["master"]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm install
      - name: lint
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Jest Test
        run: npm run test
      - name: e2e Test
        uses: cypress-io/github-action@v4
        with:
          build: npm run build
          start: npm run start-prod
          wait-on: http://localhost:3002

  deploy:
    if: ${{ (github.ref == 'refs/heads/master') && (!contains(github.event.head_commit.message, '#skip')) }}
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: PIMPfiction/AutoTagVersionRelease@v1
        with:
          github-token: ${{ secrets.PAT }}
